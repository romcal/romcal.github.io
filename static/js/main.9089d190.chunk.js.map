{"version":3,"sources":["reportWebVitals.ts","constants/calendars.ts","AppContext.tsx","stores/romcal.store.ts","components/Colors.tsx","components/AdditionalLineContent.tsx","components/Day.tsx","components/LoadingIndicator.tsx","components/CalendarContent.tsx","components/CalendarMenu.tsx","components/LocaleMenu.tsx","components/MonthPicker.tsx","components/CalendarToolbar.tsx","components/Calendar.tsx","components/RomcalHeaderLogo.tsx","components/Header.tsx","components/Headline.tsx","components/RomcalVersion.tsx","RomcalApp.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CALENDARS","GeneralRoman","Americas","Argentina","Australia","Austria","Belgium","Bolivia","BosniaHerzegovina","Brazil","Canada","Chile","China","CostaRica","Croatia","CzechRepublic","Denmark","England","Europe","Finland","France","France_Paris","France_SaintDenis","France_Strasbourg","Germany","Greece","Guatemala","Hungary","India","Ireland","Italy","Japan","Lebanon","Lithuania","Malta","Mexico","Netherlands","NewZealand","Norway","Panama","Paraguay","Peru","Philippines","Poland","Portugal","PuertoRico","Romania","Russia","Scotland","Slovakia","Slovenia","Spain","SriLanka","Sweden","Switzerland","Ukraine","UnitedStates","Uruguay","Venezuela","Vietnam","Wales","stores","romcalStore","fetchingData","yearlyData","monthlyData","localeKey","calendarKey","currentYear","Date","getFullYear","currentMonth","getMonth","fetchRomcalData","a","length","calendar","romcal","Romcal","localizedCalendar","generateCalendar","Object","values","data","runInAction","Promise","resolve","getMonthData","filter","days","date","setCalendarKey","key","setLocaleKey","setDate","newYear","setPreviousMonth","newDate","subMonths","setNextMonth","addMonths","makeAutoObservable","this","AppContext","React","SingleColor","props","color","colorName","className","toLowerCase","capitalize","Colors","colors","colorNames","map","index","AdditionalLineContent","day","rank","includes","rankName","hdo","isHolyDayOfObligation","getDay","Container","styled","Day","objArr","liturgicalDay","getDate","MonthTitle","format","Accordion","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","id","DayContainer","container","direction","justifyContent","alignItems","Grid","item","xs","Box","Tooltip","placement","title","DayNumber","MainTitle","name","slice","altDay","OptionalTitle","isOptional","OrLabel","AccordionDetails","src","obj","dateDef","precedence","allowSimilarRankItems","i18nDef","seasons","seasonNames","periods","martyrology","titles","cycles","properCycle","properCycleName","sundayCycle","sundayCycleName","weekdayCycle","weekdayCycleName","psalterWeek","psalterWeekName","fromCalendar","fromExtendedCalendars","displayDataTypes","shouldCollapse","field","LoadingIndicator","sx","display","CircularProgress","CalendarContent","observer","useContext","MonthContainer","CalendarMenu","minWidth","marginRight","FormControl","fullWidth","InputLabel","variant","htmlFor","NativeSelect","value","onChange","event","target","keys","str","replace","c","toUpperCase","LocaleMenu","allLocales","LOCALE_KEYS","reduce","acc","pkg","LOCALE_VAR_NAMES","entries","isoKey","MonthPicker","marginTop","IconButton","onClick","DatePicker","label","views","minDate","newValue","renderInput","params","TextField","helperText","marginLeft","CalendarToolbar","Group","Calendar","RomcalHeaderLogo","href","Logo","alt","Header","HeaderLinksContainer","HeaderLink","underline","Link","Headline","HeadlineContainer","HeadlineFooter","Button","startIcon","RomcalVersion","VersionContainer","getVersion","theme","createTheme","palette","primary","light","main","dark","contrastText","secondary","RomcalApp","Provider","LocalizationProvider","dateAdapter","AdapterDateFns","ThemeProvider","AppContainer","maxWidth","fixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9089d190.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const CALENDARS: Record<string, Promise<any>> = {\n  GeneralRoman: import('@romcal/calendar.general-roman'),\n  Americas: import('@romcal/calendar.americas'),\n  Argentina: import('@romcal/calendar.argentina'),\n  Australia: import('@romcal/calendar.australia'),\n  Austria: import('@romcal/calendar.austria'),\n  Belgium: import('@romcal/calendar.belgium'),\n  Bolivia: import('@romcal/calendar.bolivia'),\n  BosniaHerzegovina: import('@romcal/calendar.bosnia-herzegovina'),\n  Brazil: import('@romcal/calendar.brazil'),\n  Canada: import('@romcal/calendar.canada'),\n  Chile: import('@romcal/calendar.chile'),\n  China: import('@romcal/calendar.china'),\n  CostaRica: import('@romcal/calendar.costa-rica'),\n  Croatia: import('@romcal/calendar.croatia'),\n  CzechRepublic: import('@romcal/calendar.czech-republic'),\n  Denmark: import('@romcal/calendar.denmark'),\n  England: import('@romcal/calendar.england'),\n  Europe: import('@romcal/calendar.europe'),\n  Finland: import('@romcal/calendar.finland'),\n  France: import('@romcal/calendar.france'),\n  France_Paris: import('@romcal/calendar.france.paris'),\n  France_SaintDenis: import('@romcal/calendar.france.saint-denis'),\n  France_Strasbourg: import('@romcal/calendar.france.strasbourg'),\n  Germany: import('@romcal/calendar.germany'),\n  Greece: import('@romcal/calendar.greece'),\n  Guatemala: import('@romcal/calendar.guatemala'),\n  Hungary: import('@romcal/calendar.hungary'),\n  India: import('@romcal/calendar.india'),\n  Ireland: import('@romcal/calendar.ireland'),\n  Italy: import('@romcal/calendar.italy'),\n  Japan: import('@romcal/calendar.japan'),\n  Lebanon: import('@romcal/calendar.lebanon'),\n  Lithuania: import('@romcal/calendar.lithuania'),\n  Malta: import('@romcal/calendar.malta'),\n  Mexico: import('@romcal/calendar.mexico'),\n  Netherlands: import('@romcal/calendar.netherlands'),\n  NewZealand: import('@romcal/calendar.new-zealand'),\n  Norway: import('@romcal/calendar.norway'),\n  Panama: import('@romcal/calendar.panama'),\n  Paraguay: import('@romcal/calendar.paraguay'),\n  Peru: import('@romcal/calendar.peru'),\n  Philippines: import('@romcal/calendar.philippines'),\n  Poland: import('@romcal/calendar.poland'),\n  Portugal: import('@romcal/calendar.portugal'),\n  PuertoRico: import('@romcal/calendar.puerto-rico'),\n  Romania: import('@romcal/calendar.romania'),\n  Russia: import('@romcal/calendar.russia'),\n  Scotland: import('@romcal/calendar.scotland'),\n  Slovakia: import('@romcal/calendar.slovakia'),\n  Slovenia: import('@romcal/calendar.slovenia'),\n  Spain: import('@romcal/calendar.spain'),\n  SriLanka: import('@romcal/calendar.sri-lanka'),\n  Sweden: import('@romcal/calendar.sweden'),\n  Switzerland: import('@romcal/calendar.switzerland'),\n  Ukraine: import('@romcal/calendar.ukraine'),\n  UnitedStates: import('@romcal/calendar.united-states'),\n  Uruguay: import('@romcal/calendar.uruguay'),\n  Venezuela: import('@romcal/calendar.venezuela'),\n  Vietnam: import('@romcal/calendar.vietnam'),\n  Wales: import('@romcal/calendar.wales'),\n};\n","import * as React from 'react';\nimport { RomcalStore } from './stores';\n\nexport function createStores() {\n  return { romcalStore: new RomcalStore() };\n}\n\nexport const stores = createStores();\n\nexport const AppContext = React.createContext(stores);\n","import { addMonths, subMonths } from 'date-fns';\nimport { makeAutoObservable, runInAction } from 'mobx';\nimport Romcal, { BaseLiturgicalDay } from 'romcal';\nimport { CALENDARS } from '../constants/calendars';\n\nexport class RomcalStore {\n  fetchingData: boolean = false;\n  yearlyData: BaseLiturgicalDay[][] = [];\n  monthlyData: BaseLiturgicalDay[][] = [];\n  localeKey: string = 'En';\n  calendarKey: string = 'GeneralRoman';\n  currentYear: number = new Date().getFullYear();\n  currentMonth: number = new Date().getMonth();\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  fetchRomcalData = async () => {\n    if (this.yearlyData.length === 0) {\n      const calendar = (await CALENDARS[this.calendarKey])[`${this.calendarKey}_${this.localeKey}`];\n      const romcal = new Romcal({ localizedCalendar: calendar });\n      const data = await romcal.generateCalendar(this.currentYear).then(Object.values);\n      runInAction(() => {\n        this.yearlyData = data;\n      });\n    }\n    return Promise.resolve();\n  };\n\n  getMonthData = () => {\n    runInAction(() => (this.fetchingData = true));\n    this.fetchRomcalData().then(() => {\n      const monthlyData = this.yearlyData.filter((days) => new Date(days[0].date).getMonth() === this.currentMonth);\n      runInAction(() => {\n        this.monthlyData = monthlyData;\n        this.fetchingData = false;\n      });\n    });\n  };\n\n  setCalendarKey = (key: string): void => {\n    this.calendarKey = key;\n    this.yearlyData = [];\n    this.getMonthData();\n  };\n\n  setLocaleKey = (key: string): void => {\n    this.localeKey = key;\n    this.yearlyData = [];\n    this.getMonthData();\n  };\n\n  setDate = (date: Date): void => {\n    const newYear = date.getFullYear();\n    if (newYear !== this.currentMonth) this.yearlyData = [];\n    this.currentYear = newYear;\n    this.currentMonth = date.getMonth();\n    this.getMonthData();\n  };\n\n  setPreviousMonth = (): void => {\n    const newDate = subMonths(new Date(this.currentYear, this.currentMonth, 1), 1);\n    if (newDate.getFullYear() !== this.currentMonth) this.yearlyData = [];\n    this.currentYear = newDate.getFullYear();\n    this.currentMonth = newDate.getMonth();\n    this.getMonthData();\n  };\n\n  setNextMonth = (): void => {\n    const newDate = addMonths(new Date(this.currentYear, this.currentMonth, 1), 1);\n    if (newDate.getFullYear() !== this.currentMonth) this.yearlyData = [];\n    this.currentYear = newDate.getFullYear();\n    this.currentMonth = newDate.getMonth();\n    this.getMonthData();\n  };\n}\n","import { capitalize } from '@mui/material';\nimport React from 'react';\nimport { Color } from 'romcal';\n\nexport function SingleColor(props: { color: Color; colorName: string }) {\n  const { color, colorName } = props;\n  return (\n    <>\n      <span className={`color-ship ${color.toLowerCase()}`} />\n      {capitalize(colorName)}\n    </>\n  );\n}\n\nexport default function Colors(props: { colors: Color[]; colorNames: string[] }) {\n  const { colors, colorNames } = props;\n  return (\n    <>\n      {colors.map((color, index) => (\n        <span key={index}>\n          {index > 0 ? ', ' : ''}\n          <SingleColor key={color} color={color} colorName={colorNames[index]} />\n        </span>\n      ))}\n    </>\n  );\n}\n","import { capitalize } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport React from 'react';\nimport { BaseLiturgicalDay } from 'romcal';\nimport Colors from './Colors';\n\nexport default function AdditionalLineContent(props: { day: BaseLiturgicalDay }) {\n  const { day } = props;\n  const rank = ['SUNDAY', 'WEEKDAY'].includes(day.rank) ? null : capitalize(day.rankName);\n  const hdo = day.isHolyDayOfObligation && new Date(day.date).getDay() !== 0 ? '(Holy Day of Obligation)' : null;\n\n  return (\n    <Container>\n      <Colors colors={day.colors} colorNames={day.colorNames} />\n      {day.colors.length && rank ? ',' : ''} {rank} {hdo}\n    </Container>\n  );\n}\n\nconst Container = styled('p')`\n  margin: 0;\n  font-family: 'EB Garamond', serif;\n  font-size: 0.9em;\n`;\n","import { Accordion, AccordionDetails, AccordionSummary, Box, Grid, Tooltip } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { format } from 'date-fns';\nimport React from 'react';\nimport { BaseLiturgicalDay } from 'romcal';\nimport AdditionalLineContent from './AdditionalLineContent';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ReactJson from 'react-json-view';\n\nconst toPlainObject = (objArr: BaseLiturgicalDay[]): BaseLiturgicalDay[] =>\n  objArr.map((obj) => ({\n    key: obj.key,\n    name: obj.name,\n    date: obj.date,\n    dateDef: obj.dateDef,\n    precedence: obj.precedence,\n    rank: obj.rank,\n    rankName: obj.rankName,\n    allowSimilarRankItems: obj.allowSimilarRankItems,\n    isHolyDayOfObligation: obj.isHolyDayOfObligation,\n    isOptional: obj.isOptional,\n    i18nDef: obj.i18nDef,\n    seasons: obj.seasons,\n    seasonNames: obj.seasonNames,\n    periods: obj.periods,\n    colors: obj.colors,\n    colorNames: obj.colorNames,\n    martyrology: obj.martyrology,\n    titles: obj.titles,\n    calendar: obj.calendar,\n    cycles: {\n      properCycle: obj.cycles.properCycle,\n      properCycleName: obj.cycles.properCycleName,\n      sundayCycle: obj.cycles.sundayCycle,\n      sundayCycleName: obj.cycles.sundayCycleName,\n      weekdayCycle: obj.cycles.weekdayCycle,\n      weekdayCycleName: obj.cycles.weekdayCycleName,\n      psalterWeek: obj.cycles.psalterWeek,\n      psalterWeekName: obj.cycles.psalterWeekName,\n    },\n    fromCalendar: 'ProperOfTime',\n    fromExtendedCalendars: [],\n  }));\n\nexport default function Day(props: { liturgicalDay: BaseLiturgicalDay[] }) {\n  const { liturgicalDay } = props;\n  const date = new Date(liturgicalDay[0].date);\n\n  return (\n    <>\n      {date.getDate() === 1 && <MonthTitle>{format(date, 'MMMM yyyy')}</MonthTitle>}\n      <Accordion\n        className={`dow-${date.getDay()} date-in-month-${date.getDate()}`}\n        TransitionProps={{ unmountOnExit: true }}\n      >\n        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          <DayContainer container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\n            <Grid item xs={1}>\n              <Box>\n                <Tooltip placement=\"top-start\" title={format(date, 'EEEE')}>\n                  <DayNumber>{date.getDate()}</DayNumber>\n                </Tooltip>\n              </Box>\n            </Grid>\n            <Grid item xs>\n              <Box>\n                <MainTitle className={liturgicalDay[0].rank.toLowerCase()}>{liturgicalDay[0].name}</MainTitle>\n                <AdditionalLineContent day={liturgicalDay[0]} />\n                {liturgicalDay.length > 1 &&\n                  liturgicalDay.slice(1).map((altDay) => (\n                    <div key={altDay.key}>\n                      <OptionalTitle key={altDay.key} className={altDay.rank.toLowerCase()}>\n                        {altDay.isOptional ? <OrLabel>or: </OrLabel> : <></>}\n                        {altDay.name}\n                      </OptionalTitle>\n                      <AdditionalLineContent day={altDay} />\n                    </div>\n                  ))}\n              </Box>\n            </Grid>\n          </DayContainer>\n        </AccordionSummary>\n        <AccordionDetails>\n          <ReactJson\n            src={toPlainObject(liturgicalDay)}\n            displayDataTypes={false}\n            shouldCollapse={(field) => ['dateDef', 'i18nDef'].includes(field.name ?? '')}\n          />\n        </AccordionDetails>\n      </Accordion>\n    </>\n  );\n}\n\nconst DayContainer = styled(Grid)`\n  margin: 5px 0;\n`;\n\nconst MonthTitle = styled('h4')`\n  font-weight: 100;\n  font-family: 'Roboto', sans-serif;\n  font-size: 2em;\n`;\n\nconst DayNumber = styled('h4')`\n  font-family: 'EB Garamond', serif;\n  font-weight: normal;\n  font-size: 30px;\n  line-height: 30px;\n  text-align: right;\n  width: 30px;\n  margin: 0;\n`;\n\nconst MainTitle = styled('h5')`\n  font-weight: 500;\n  font-family: 'EB Garamond', serif;\n  vertical-align: baseline;\n  line-height: 30px;\n  margin: 0;\n\n  &::before {\n    content: '';\n    font-size: 25px;\n  }\n`;\n\nconst OptionalTitle = styled('h6')`\n  font-weight: 500;\n  font-family: 'EB Garamond', serif;\n  vertical-align: baseline;\n  line-height: 30px;\n  margin: 5px 0 0;\n\n  &::before {\n    content: '';\n    font-size: 25px;\n  }\n`;\n\nconst OrLabel = styled('span')`\n  font-size: 19px;\n  text-transform: none;\n  font-variant: normal;\n  font-weight: 400;\n`;\n","import styled from '@emotion/styled';\nimport { Box, CircularProgress } from '@mui/material';\nimport * as React from 'react';\n\nexport default function LoadingIndicator() {\n  return (\n    <Container sx={{ display: 'flex' }}>\n      <CircularProgress />\n    </Container>\n  );\n}\n\nconst Container = styled(Box)`\n  margin: 80px 0 50px;\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n`;\n","import { styled } from '@mui/material/styles';\nimport { observer } from 'mobx-react';\nimport React, { useContext } from 'react';\nimport { AppContext } from '../AppContext';\nimport Day from './Day';\nimport LoadingIndicator from './LoadingIndicator';\n\ninterface Props {}\n\nconst CalendarContent = observer((props: Props) => {\n  const { romcalStore } = useContext(AppContext);\n  const { fetchingData, monthlyData } = romcalStore;\n\n  if (monthlyData.length === 0 && !fetchingData) {\n    romcalStore.getMonthData();\n  }\n\n  if (fetchingData) {\n    return <LoadingIndicator />;\n  }\n\n  return (\n    <MonthContainer>\n      {monthlyData.map((day) => (\n        <Day liturgicalDay={day} key={day[0].date} />\n      ))}\n    </MonthContainer>\n  );\n});\n\nexport default CalendarContent;\n\nconst MonthContainer = styled('div')`\n  padding: 30px 10px;\n`;\n","import { Box, capitalize, FormControl, InputLabel, NativeSelect } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport React, { useContext } from 'react';\nimport { AppContext } from '../AppContext';\nimport { CALENDARS } from '../constants/calendars';\n\nconst toHumanName = (str: string): string =>\n  capitalize(\n    str\n      .replace(/_/g, ' / ')\n      .replace(/([A-Z])/g, ' $1')\n      .replace(/\\s([a-z])/g, (c) => ` ${c.toUpperCase()}`),\n  );\n\nconst CalendarMenu = observer(() => {\n  const { romcalStore } = useContext(AppContext);\n  const { calendarKey, setCalendarKey } = romcalStore;\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (event.target.value) {\n      setCalendarKey(event.target.value);\n    }\n  };\n\n  return (\n    <Box sx={{ minWidth: 120, marginRight: 2 }}>\n      <FormControl fullWidth>\n        <InputLabel variant=\"standard\" htmlFor=\"uncontrolled-native\">\n          Calendar\n        </InputLabel>\n        <NativeSelect id=\"calendar\" value={calendarKey} onChange={handleChange}>\n          {Object.keys(CALENDARS).map((key) => (\n            <option key={key} value={key}>\n              {toHumanName(key)}\n            </option>\n          ))}\n        </NativeSelect>\n      </FormControl>\n    </Box>\n  );\n});\n\nexport default CalendarMenu;\n","import { Box, FormControl, InputLabel, NativeSelect } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport React, { useContext } from 'react';\nimport Romcal from 'romcal';\nimport { AppContext } from '../AppContext';\n\nconst LocaleMenu = observer(() => {\n  const { romcalStore } = useContext(AppContext);\n  const { localeKey, setLocaleKey } = romcalStore;\n\n  const allLocales = Romcal.LOCALE_KEYS.reduce((acc: Record<string, string>, pkg, index) => {\n    acc[Romcal.LOCALE_VAR_NAMES[index]] = pkg;\n    return acc;\n  }, {});\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setLocaleKey(event.target.value as string);\n  };\n\n  return (\n    <Box sx={{ minWidth: 120 }}>\n      <FormControl fullWidth>\n        <InputLabel variant=\"standard\" htmlFor=\"uncontrolled-native\">\n          Locale\n        </InputLabel>\n        <NativeSelect id=\"calendar\" value={localeKey} onChange={handleChange}>\n          {Object.entries(allLocales).map(([key, isoKey]) => (\n            <option key={key} value={key}>\n              {isoKey}\n            </option>\n          ))}\n        </NativeSelect>\n      </FormControl>\n    </Box>\n  );\n});\n\nexport default LocaleMenu;\n","import styled from '@emotion/styled';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport DatePicker from '@mui/lab/DatePicker';\nimport { Box, IconButton, TextField } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { AppContext } from '../AppContext';\n\ninterface Props {}\n\nconst MonthPicker = observer((props: Props) => {\n  const { romcalStore } = useContext(AppContext);\n  const { currentYear, currentMonth } = romcalStore;\n\n  const previousMonth = () => romcalStore.setPreviousMonth();\n  const nextMonth = () => romcalStore.setNextMonth();\n\n  const datePickerChange = (newValue: Date | null) => {\n    if (newValue) {\n      romcalStore.setDate(newValue);\n    }\n  };\n\n  return (\n    <Container>\n      <Box sx={{ marginRight: 1, marginTop: 1 }}>\n        <IconButton aria-label=\"delete\" color=\"primary\" onClick={previousMonth}>\n          <ArrowBackIcon />\n        </IconButton>\n      </Box>\n      <Box sx={{ minWidth: 120 }}>\n        <DatePicker\n          label=\"Month and Year\"\n          views={['year', 'month']}\n          minDate={new Date('1969-01-01')}\n          value={new Date(currentYear, currentMonth, 1)}\n          onChange={datePickerChange}\n          renderInput={(params) => <TextField {...params} variant=\"standard\" helperText={null} />}\n        />\n      </Box>\n      <Box sx={{ marginLeft: 1, marginTop: 1 }}>\n        <IconButton aria-label=\"delete\" color=\"primary\" onClick={nextMonth}>\n          <ArrowForwardIcon />\n        </IconButton>\n      </Box>\n    </Container>\n  );\n});\n\nexport default MonthPicker;\n\nconst Container = styled('div')`\n  margin-top: 20px;\n  display: inline-flex;\n`;\n","import { Grid } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport React from 'react';\nimport CalendarMenu from './CalendarMenu';\nimport LocaleMenu from './LocaleMenu';\nimport MonthPicker from './MonthPicker';\n\nexport default function CalendarToolbar() {\n  return (\n    <Container container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n      <MonthPicker />\n      <Group>\n        <CalendarMenu />\n        <LocaleMenu />\n      </Group>\n    </Container>\n  );\n}\n\nconst Container = styled(Grid)`\n  margin-bottom: 0;\n`;\n\nconst Group = styled('div')`\n  margin-top: 20px;\n  display: inline-flex;\n`;\n","import { observer } from 'mobx-react';\nimport React from 'react';\nimport CalendarContent from './CalendarContent';\nimport CalendarToolbar from './CalendarToolbar';\n\nexport const Calendar = observer(() => {\n  return (\n    <>\n      <CalendarToolbar />\n      <CalendarContent />\n    </>\n  );\n});\n","import { styled } from '@mui/material/styles';\nimport * as React from 'react';\n\nexport default function RomcalHeaderLogo() {\n  return (\n    <a href=\"./\">\n      <Logo src=\"./romcal-logo.png\" alt=\"Romcal\" />\n    </a>\n  );\n}\n\nconst Logo = styled('img')`\n  max-height: 60px;\n  padding: 35px 20px 40px;\n`;\n","import { Box, Grid, Link } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport React from 'react';\nimport RomcalHeaderLogo from './RomcalHeaderLogo';\n\nexport default function Header() {\n  return (\n    <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n      <RomcalHeaderLogo />\n      <HeaderLinksContainer>\n        <HeaderLink href=\"https://github.com/romcal/romcal/blob/dev/README.md\" underline=\"hover\">\n          Documentation\n        </HeaderLink>\n\n        <HeaderLink href=\"https://github.com/romcal/romcal\" underline=\"hover\">\n          Source Code\n        </HeaderLink>\n      </HeaderLinksContainer>\n    </Grid>\n  );\n}\n\nconst HeaderLinksContainer = styled(Box)`\n  margin: 20px 0;\n`;\n\nconst HeaderLink = styled(Link)`\n  text-transform: uppercase;\n  margin: 10px;\n  font-weight: bold;\n  font-size: 0.9em;\n`;\n","import GitHubIcon from '@mui/icons-material/GitHub';\nimport { Button } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport React from 'react';\n\nexport default function Headline() {\n  return (\n    <HeadlineContainer>\n      <p>A JavaScript library that generates liturgical calendars of the Roman Rite of the Roman Catholic Church.</p>\n      <HeadlineFooter>\n        <Button variant=\"outlined\" href=\"https://github.com/romcal/romcal\" startIcon={<GitHubIcon />}>\n          See more\n        </Button>\n      </HeadlineFooter>\n    </HeadlineContainer>\n  );\n}\n\nconst HeadlineContainer = styled('div')`\n  font-family: 'Roboto', sans-serif;\n  font-weight: 100;\n  font-size: 1.5em;\n  margin: 0 0 30px;\n  padding: 20px;\n  border-radius: 3px;\n  background-image: linear-gradient(135deg, #fcfaf8 0%, #faf7f4 100%);\n\n  > p {\n    margin: 0;\n    line-height: 1.4em;\n  }\n`;\n\nconst HeadlineFooter = styled('p')`\n  text-align: right;\n  padding-top: 10px;\n`;\n","import { styled } from '@mui/material/styles';\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport Romcal from 'romcal';\n\nconst RomcalVersion = observer(() => {\n  return <VersionContainer>romcal v.{Romcal.getVersion()}</VersionContainer>;\n});\n\nexport default RomcalVersion;\n\nconst VersionContainer = styled('div')`\n  padding: 30px 10px;\n  text-align: center;\n  font-size: 0.8em;\n  color: #7f7f7f;\n  font-weight: 100;\n`;\n","import AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport { Container, createTheme, ThemeProvider } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport React from 'react';\nimport { AppContext, stores } from './AppContext';\nimport { Calendar } from './components/Calendar';\nimport Header from './components/Header';\nimport Headline from './components/Headline';\nimport './RomcalApp.css';\nimport RomcalVersion from './components/RomcalVersion';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: '#ff5f3d',\n      main: '#D02611',\n      dark: '#970000',\n      contrastText: '#000',\n    },\n    secondary: {\n      light: '#4f5b62',\n      main: '#263238',\n      dark: '#000a12',\n      contrastText: '#fff',\n    },\n  },\n});\n\nfunction RomcalApp() {\n  return (\n    <AppContext.Provider value={stores}>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <ThemeProvider theme={theme}>\n          <AppContainer maxWidth=\"md\" fixed={true}>\n            <Header />\n            <Headline />\n            <Calendar />\n            <RomcalVersion />\n          </AppContainer>\n        </ThemeProvider>\n      </LocalizationProvider>\n    </AppContext.Provider>\n  );\n}\n\nexport default RomcalApp;\n\nconst AppContainer = styled(Container)`\n  border-style: solid;\n  border-color: #fff;\n  border-width: 0;\n  border-left-width: thin;\n  border-right-width: thin;\n  background-color: rgba(255, 255, 2555, 0.9);\n  box-sizing: border-box;\n  min-height: 100vh;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport RomcalApp from './RomcalApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RomcalApp />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}